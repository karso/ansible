#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
    passenger_ruby /usr/bin/ruby;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server_names_hash_bucket_size 64;
    sendfile on;
    tcp_nopush  on;
    tcp_nodelay off;
 
    # Where to store the body of large client requests on disk
    # NGINX will stream this to disk before posting it to your Mongrels,
    # preventing slow clients tying up your app.
    client_body_temp_path /var/spool/nginx-client-body 1 2;
 
    # Max size of a request from a client (usually a POST).  This will limit
    # the size of file uploads to your app
    client_max_body_size 1000m;

    include       mime.types;
    default_type  application/octet-stream;

    keepalive_timeout  65;

    gzip  on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain text/html text/css application/json application/x-javascript  application/xml application/xml+rss text/javascript application/javascript text/x-js;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


    server {
        listen       localhost:80;
        server_name  localhost;
        passenger_enabled on;
        underscores_in_headers on;
        root /home/www/public_html/kaybus/current/public;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    # HTTP server
    #
    server {
        listen       80;
        underscores_in_headers on;

        ## redirect http to https ##
        rewrite        ^ https://$host$request_uri? permanent;
    }

    # HTTPS server
    #
    server {
        listen       443 ssl;
	    underscores_in_headers on;

        ssl                  on;
        ssl_certificate      /etc/nginx/conf.d/kaybus.com.crt;
        ssl_certificate_key  /etc/nginx/conf.d/kaybus.key;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;

        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;

	if (-f $document_root/maintenance.html) {
		return 503;
	}

	location /nginx_status {
  		stub_status on;
  		access_log   off;
  		allow 127.0.0.1;
  		deny all;
	}
    location /reporting/aliveness-test {
        proxy_pass http://reporting:8083; #reporting
        proxy_set_header Host $host;
        deny all;
    }

    location /analytics/aliveness-test {
        proxy_pass http://analytics:8082; # analytics
        proxy_set_header Host $host;
        allow 54.221.229.5;
        deny all;
    }
    
    location /socket.io/ {
        proxy_pass http://pusher:8090;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }      
    
	location /reporting/ {
 	  proxy_pass http://reporting:8083; # reporting
 	  proxy_set_header Host $host;
	}	
        
    location /analytics/ {
        proxy_pass http://analytics:8082; # analytics
        proxy_set_header Host $host;
    }

	location /uploads/ {
	  proxy_pass http://boxer:3030; # boxer
	  proxy_set_header Host $host;
	  expires 24h;
	}
    location /mediacache/ {
      proxy_pass http://media-streamer:1935; # Wowza media streaming engine
      proxy_set_header Host $host;
      expires 24h;
    }

	location /policy/ {  
  
    proxy_pass http://policy:14819; # oauth   
    proxy_set_header Host $host;  
  
    }  


	passenger_enabled on;
#        rails_env test;
	root /home/www/public_html/kaybus/current/public;	

	#location / {
        #}

	error_page 503 @maintenance;
	location @maintenance {
		rewrite ^(.*)$ /maintenance.html break;
	}


    location ~* ^/assets/ {
        expires max;
        add_header Cache-Control public;
        break;
    }

	location /favicon.ico {
	   passenger_enabled on;
#        rails_env test;
	   auth_basic off;
           allow all;
	}



        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
